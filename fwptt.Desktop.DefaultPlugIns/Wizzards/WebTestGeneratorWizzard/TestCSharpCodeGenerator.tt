<#@ template language="C#" #>
using System;
using System.Collections;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Data;
using System.Net;
using System.IO;
using System.Text;
using fwptt.TestProject.Run;
using fwptt.TestProject.Run.Data;

namespace IETests
{
	public class <#= TestDefinition.ClassName #>:BaseWebTest
	{
		//var actions = new List<Func<Task>>();
		public <#= TestDefinition.ClassName #>():base("<#=BaseUrl#>",
			"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
			,"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*")
		{			
			
		}
		<# for(int index = 0; index < TestDefinition.Requests.Count; index++) 
		{
			var request = TestDefinition.Requests[index];
		#>
	
		
		#region Peristor - <#= index #> <#= request.URL #>
		private async Task <#= GetMethodName(index) #>()
		{
			await InitializeCurrentRequest();
			CurrentRequest.Request.URL = @"<#= request.URL #>";
			CurrentRequest.Request.Port = <#= request.Port #>;
			CurrentRequest.Request.RequestMethod = @"<#= request.RequestMethod??"GET" #>";
			<#if(request.RequestMethod == "POST" || request.RequestMethod == "PUT") { #>
			CurrentRequest.Request.PayloadContentType = @"<#= request.PayloadContentType??"application/x-www-form-urlencoded" #>";
			CurrentRequest.Request.Payload = @"<#= request.Payload??string.Empty #>";
			<# } #>
			<# foreach(var qp in request.QueryParams) 
			{ #>CurrentRequest.Request.QueryParams.Add(new RequestParam(@"<#=qp.ParamName #>",@"<#=qp.ParamValue??string.Empty #>"));
			<# }  #>
			
			<# foreach(var pp in request.PostParams) 
			{ #>CurrentRequest.Request.PostParams.Add(new RequestParam(@"<#=pp.ParamName #>",@"<#=pp.ParamValue??string.Empty #>"));
			<# }  #>

			var req = GetRequest();		
			var resp = await GetResponse(req);
			
			//Add response handling stuff here if needed
		}
		#endregion
		<# } #>
		
		protected override async Task RunTest()
		{			
			client.CookieContainer = new System.Net.CookieContainer();
			<# for(int index = 0; index < TestDefinition.Requests.Count; index++) 
			{ #>await <#= GetMethodName(index) #>();
			<# } #>		
		}
	}
}